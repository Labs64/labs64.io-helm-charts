mode: deployment

image:
  repository: otel/opentelemetry-collector-contrib
  tag: latest

presets:
  logsCollection:
    enabled: true
    includeCollectorLogs: false
    storeCheckpoints: false
    maxRecombineLogSize: 102400
  hostMetrics:
    enabled: false
  kubernetesAttributes:
    enabled: true
    # This can lead to a lot of labels, which might increase cardinality and cost in your backend, but it ensures you get all available labels.
    # Be mindful of this in production!
    extractAllPodLabels: true
    # Similar to labels, annotations can also add significant metadata.
    extractAllPodAnnotations: true
  kubeletMetrics:
    enabled: false
  kubernetesEvents:
    enabled: true
  clusterMetrics:
    enabled: true

clusterRole:
  create: true

config:
  receivers:
    otlp:
      protocols:
        grpc: {}
        http: {}

  processors:
    batch:
      send_batch_size: 256
      timeout: 10s
    batch/traces:
      send_batch_size: 256
      timeout: 10s
    memory_limiter:
      check_interval: 5s
      limit_percentage: 80
      spike_limit_percentage: 25

  exporters:
    otlp/data-prepper-traces:
      endpoint: "http://opensearch-data-prepper.monitoring.svc.cluster.local:21890"
      tls:
        insecure: true
    otlp/data-prepper-metrics:
      endpoint: "http://opensearch-data-prepper.monitoring.svc.cluster.local:21891"
      tls:
        insecure: true
    otlp/data-prepper-logs:
      endpoint: "http://opensearch-data-prepper.monitoring.svc.cluster.local:21892"
      tls:
        insecure: true

  service:
    pipelines:
      traces:
        receivers: [otlp]
        processors: [batch/traces, memory_limiter]
        exporters: [otlp/data-prepper-traces]
      metrics:
        receivers: [otlp]
        processors: [batch]
        exporters: [otlp/data-prepper-metrics]
      logs:
        receivers: [otlp]
        processors: [batch]
        exporters: [otlp/data-prepper-logs]
