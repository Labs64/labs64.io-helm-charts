mode: daemonset

image:
  repository: otel/opentelemetry-collector-contrib
  tag: latest

presets:
  logsCollection:
    enabled: true
    includeCollectorLogs: false
    storeCheckpoints: false
    maxRecombineLogSize: 102400
  hostMetrics:
    enabled: false
  kubernetesAttributes:
    enabled: true
    # This can lead to a lot of labels, which might increase cardinality and cost in your backend, but it ensures you get all available labels.
    # Be mindful of this in production!
    extractAllPodLabels: true
    # Similar to labels, annotations can also add significant metadata.
    extractAllPodAnnotations: true
  kubeletMetrics:
    enabled: false
  kubernetesEvents:
    enabled: true
  clusterMetrics:
    enabled: false

clusterRole:
  create: true

config:
  receivers:
    otlp:
      protocols:
        grpc: {}
        http: {}
    prometheus:
      config:
        scrape_configs:
          - job_name: 'kubernetes-pods'
            kubernetes_sd_configs:
              - role: pod
            relabel_configs:
              - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
                action: keep
                regex: true
    filelog:
      include: [ /var/log/pods/*/*.log ]
      start_at: beginning
      # Exclude logs from the collector itself to avoid self-loop
      exclude: [ /var/log/pods/*/otel-collector-*.log ]
      # Parse multiline logs (e.g., stack traces)
      #multiline:
      #  pattern: '^\S'
      #  line_end_pattern: '^\S'
      # Optional: for Kubernetes enrichment, ensure you have the `k8sattributes` processor in your pipeline
      # body:
      #   # If you want to customize how logs are parsed (e.g., JSON, regex)
      #   # check out the filelog receiver documentation for more options.
      #   encoding: utf-8
      #   attributes:
      #     # Add Kubernetes metadata
      #     kubernetes.pod.name: "$FILE_NAME_REGEX(^/var/log/pods/[^/]+/[^/]+_([^/]+)/)"
      #     kubernetes.namespace.name: "$FILE_NAME_REGEX(^/var/log/pods/([^/]+)/)"
      #     kubernetes.container.name: "$FILE_NAME_REGEX(^/var/log/pods/[^/]+/[^/]+_([^/]+)-([^_]+)/)"

  processors:
    batch:
      send_batch_size: 256
      timeout: 10s
    batch/traces:
      send_batch_size: 256
      timeout: 10s
    memory_limiter:
      check_interval: 5s
      limit_percentage: 80
      spike_limit_percentage: 25

  exporters:
    prometheusremotewrite:
      endpoint: "http://prometheus-kube-prometheus-prometheus.monitoring.svc.cluster.local:9090/api/v1/write"
      tls:
        insecure: true
    otlp/tempo:
      endpoint: "http://tempo.monitoring.svc.cluster.local:4317"
      tls:
        insecure: true
    otlphttp/victorialogs:
      endpoint: "http://victoria-logs-victoria-logs-single-server.monitoring.svc.cluster.local:9428/insert/opentelemetry/v1/logs"
      tls:
        insecure: true

  service:
    pipelines:
      metrics:
        receivers: [otlp, prometheus]
        processors: [batch]
        exporters: [prometheusremotewrite]
      traces:
        receivers: [otlp]
        processors: [batch/traces, memory_limiter]
        exporters: [otlp/tempo]
      logs:
        receivers: [otlp, filelog]
        processors: [batch]
        exporters: [otlphttp/victorialogs]
