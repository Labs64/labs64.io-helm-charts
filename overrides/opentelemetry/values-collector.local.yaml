mode: "deployment" # Can be daemonset, deployment, or statefulset

image:
  repository: otel/opentelemetry-collector-contrib
  tag: latest

presets:
  logsCollection:
    enabled: true
    includeCollectorLogs: false
    storeCheckpoints: false
    maxRecombineLogSize: 102400
  hostMetrics:
    enabled: false
  kubernetesAttributes:
    enabled: true
    extractAllPodLabels: true
    extractAllPodAnnotations: true
  kubeletMetrics:
    enabled: false
  kubernetesEvents:
    enabled: true
  clusterMetrics:
    enabled: true

clusterRole:
  create: true

config:
  receivers:
    otlp:
      protocols:
        grpc: {}
        http: {}
    #prometheus:
    #  config:
    #    scrape_configs:
    #      - job_name: 'kubernetes-pods'
    #        kubernetes_sd_configs:
    #          - role: pod
    #        relabel_configs:
    #          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
    #            action: keep
    #            regex: true

  processors:
    batch:
      send_batch_size: 256
      timeout: 10s
    batch/traces:
      send_batch_size: 256
      timeout: 10s

  exporters:
    #prometheusremotewrite:
    #  endpoint: "http://prometheus-kube-prometheus-prometheus.monitoring.svc.cluster.local:9090/api/v1/write"
    #otlphttp/loki:
    #  endpoint: "http://loki-write.monitoring.svc.cluster.local:3100/loki/api/v1/push"
    otlp/data-prepper:
      endpoint: "http://opensearch-data-prepper.monitoring.svc.cluster.local:21890"
      tls:
        insecure: true

  service:
    pipelines:
      #metrics:
      #  receivers: [otlp, prometheus]
      #  processors: [batch]
      #  exporters: [prometheusremotewrite]
      #logs:
      #  receivers: [otlp]
      #  processors: [batch]
      #  exporters: [otlphttp/loki]
      traces:
        receivers: [otlp]
        processors: [batch/traces]
        exporters: [otlp/data-prepper]
