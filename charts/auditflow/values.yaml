# -- This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# -- This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: labs64/auditflow
  # -- This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # -- Overrides the image tag whose default is the chart appVersion.
  tag: ""

transformer:
  image:
    repository: labs64/auditflow-transformer
    pullPolicy: IfNotPresent
    tag: ""
  # -- This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
  service:
    # -- This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
    port: 8081

# -- This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# -- This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# -- This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Automatically mount a ServiceAccount's API credentials?
  automount: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# RBAC configuration (create RBAC resources: Role, RoleBinding)
rbac:
  create: false
  rules: []
    #- apiGroups: [""]
    #  resources: ["pods"]
    #  verbs: ["get", "list", "watch"]

# -- This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# -- This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# -- This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # -- This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # -- This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 8080

# -- This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- IngressRoute configuration for Traefik more information can be found here: https://doc.traefik.io/traefik/routing/providers/kubernetes-crd/
ingressroute:
  # -- This sets whether the IngressRoute is enabled or not
  enabled: false
  # -- Host for the IngressRoute
  host: localhost
  # -- Entry points for the IngressRoute
  entryPoints:
    - web
    - websecure

resources:
  #limits:
  #  cpu: 200m
  #  memory: 512Mi
  requests:
    cpu: 100m
    memory: 512Mi

# -- This is to setup the liveness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /actuator/health/liveness
    port: 8080
  initialDelaySeconds: 30
  periodSeconds: 10
  failureThreshold: 3
  timeoutSeconds: 2

# -- This is to setup the readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
readinessProbe:
  httpGet:
    path: /actuator/health/readiness
    port: 8080
  initialDelaySeconds: 10
  periodSeconds: 5
  failureThreshold: 3
  timeoutSeconds: 2

# -- This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# -- Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# -- Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true


nodeSelector: {}

tolerations: []

affinity: {}

env: []

# -- Additional application properties
applicationYaml:
  # -- Transformer configuration
  transformer:
    # -- Discovery mode; "local" or "kubernetes"
    discovery:
      mode: local
    # -- Local URL for the transformer service
    local:
      url: "http://localhost:8081"
    # -- Service name and namespace for the transformer
    service:
      name: auditflow-transformer
      namespace: default

  # -- AuditFlow pipelines configuration
  pipelines: []
  #  - name: 'logs'
  #    enabled: true
  #    transformer:
  #      name: 'zero'
  #    processor:
  #      name: 'logging_processor'
  #      clazz: 'io.labs64.audit.processors.LoggingProcessor'
  #      properties:
  #        log-level: "DEBUG"

  # -- Spring configuration
  spring:
    # -- Security configuration for OAuth2
    security:
      oauth2:
        resourceserver:
          # -- JWT configuration
          jwt:
            # -- Issuer URI for the JWT tokens
            issuer-uri: http://keycloak.tools.svc.cluster.local/realms/<realm-name>
    # -- RabbitMQ connection params
    rabbitmq:
      # -- RabbitMQ host name; default: rabbitmq.<namespace>.svc.cluster.local
      host: rabbitmq.default.svc.cluster.local
      # -- RabbitMQ port; default: 5672
      port: 5672
      # -- RabbitMQ username
      username: <TODO>
      # -- RabbitMQ password
      password: <TODO>
