# -- This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# -- This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: labs64/api-gateway
  # -- This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # -- Overrides the image tag whose default is the chart appVersion.
  tag: ""

# -- This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# -- This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# -- This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Automatically mount a ServiceAccount's API credentials?
  automount: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# RBAC configuration (create RBAC resources: Role, RoleBinding)
rbac:
  create: true
  rules:
    - apiGroups: [""]
      resources: ["pods", "services", "endpoints"]
      verbs: ["get", "list", "watch"]

# -- This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# -- This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# -- This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # -- This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # -- This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 8080

# -- This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: "nginx"
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: localhost
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- IngressRoute configuration for Traefik more information can be found here: https://doc.traefik.io/traefik/routing/providers/kubernetes-crd/
ingressroute:
  # -- This sets whether the IngressRoute is enabled or not
  enabled: true
  # -- Host for the IngressRoute
  host: localhost
  # -- Entry points for the IngressRoute
  entryPoints:
    - web
    - websecure

resources:
  #limits:
  #  cpu: 200m
  #  memory: 512Mi
  requests:
    cpu: 100m
    memory: 512Mi

# -- This is to setup the liveness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /actuator/health/liveness
    port: 8080
  initialDelaySeconds: 30
  periodSeconds: 10
  failureThreshold: 3
  timeoutSeconds: 2

# -- This is to setup the readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
readinessProbe:
  httpGet:
    path: /actuator/health/readiness
    port: 8080
  initialDelaySeconds: 10
  periodSeconds: 5
  failureThreshold: 3
  timeoutSeconds: 2

# -- This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# -- Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# -- Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

env: []

# -- Additional application properties
applicationYaml:
  # -- Spring configuration
  spring:
    data:
        # -- Redis configuration
      redis:
        # -- Host for the Redis server
        host: redis-master.tools.svc.cluster.local
        # -- Port for the Redis server
        port: 6379
    # -- Security configuration for OAuth2
    security:
      oauth2:
        resourceserver:
          # -- JWT configuration
          jwt:
            # -- Issuer URI for the JWT tokens
            issuer-uri: http://keycloak.tools.svc.cluster.local/realms/<realm-name>
    cloud:
      gateway:
        server:
          webflux:
            # -- Define the routes for the API Gateway
            routes: []
              #- id: auditflow_service_route
              #  uri: http://labs64io-auditflow:8080
              #  predicates:
              #    - Path=/api/v1/audit/**
              #- id: auditflow_apidocs_route
              #  uri: http://labs64io-auditflow:8080
              #  predicates:
              #    - Path=/auditflow/v3/api-docs
              #  filters:
              #    - RewritePath=/auditflow/v3/api-docs, /v3/api-docs
              #- id: ecommerce_service_route
              #  uri: http://labs64io-ecommerce:8080
              #  predicates:
              #    - Path=/api/v1/cart/**
              #- id: ecommerce_apidocs_route
              #  uri: http://labs64io-ecommerce:8080
              #  predicates:
              #    - Path=/ecommerce/v3/api-docs
              #  filters:
              #    - RewritePath=/ecommerce/v3/api-docs, /v3/api-docs
  # -- SpringDoc configuration for the API Gateway
  springdoc:
    # -- Define the locations for the Swagger UI to fetch the docs
    swagger-ui:
      urls: []
        #- name: auditflow
        #  url: http://labs64io-api-gateway.localhost/auditflow/v3/api-docs
        #- name: ecommerce
        #  url: http://labs64io-api-gateway.localhost/ecommerce/v3/api-docs
